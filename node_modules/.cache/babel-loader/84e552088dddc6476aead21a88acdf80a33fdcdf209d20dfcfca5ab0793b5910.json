{"ast":null,"code":"var _jsxFileName = \"/Users/thanhbinh/Downloads/Test Dev - DXM/test-dev/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport useState from 'react';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  let navigate = useNavigate();\n  const [username, setUserName] = useState('');\n  const [pass, setPass] = useState('');\n  const log = e => {\n    e.preventDefault();\n    if (validate()) {\n      fetch(\"http://localhost:3000/users\" + username).then(res => {\n        return res.json();\n      }).then(resp => {\n        // console.log(resp)\n        if (Object.keys(resp).length === 0) {\n          toast.error('Entrez votre username');\n        } else {\n          if (resp.pass === pass) {\n            navigate('/pilote');\n          } else {\n            toast.error('il y a error');\n          }\n        }\n      }).catch(err => {\n        toast.error('Error');\n      });\n    }\n  };\n  const ProceedLoginusingAPI = e => {\n    e.preventDefault();\n    if (validate()) {\n      ///implentation\n      // console.log('proceed');\n      let inputobj = {\n        \"username\": username,\n        \"password\": password\n      };\n      fetch(\"https://localhost:44308/User/Authenticate\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(inputobj)\n      }).then(res => {\n        return res.json();\n      }).then(resp => {\n        console.log(resp);\n        if (Object.keys(resp).length === 0) {\n          toast.error('Login failed, invalid credentials');\n        } else {\n          toast.success('Success');\n          sessionStorage.setItem('username', username);\n          sessionStorage.setItem('jwttoken', resp.jwtToken);\n          usenavigate('/');\n        }\n      }).catch(err => {\n        toast.error('Login Failed due to :' + err.message);\n      });\n    }\n  };\n  const validate = () => {\n    let result = true;\n    if (username === '' || username === null) {\n      result = false;\n      toast.warning('Please Enter Username');\n    }\n    if (pass === '' || pass === null) {\n      result = false;\n      toast.warning('Please Enter Password');\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ProceedLoginusingAPI,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"account\",\n          children: \"ID ACCOUNT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"account\",\n          value: username,\n          onChange: e => setUserName(e.target.value),\n          className: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"account\",\n          children: \"PASSWORD \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          value: pass,\n          onChange: e => setPass(e.target.value),\n          className: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn1\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          onClick: log,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel\",\n          navigate: \"/\",\n          value: \"cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"forget\",\n          href: \"\",\n          children: \"Forgot Password ???\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"7/VOF9ZUbLep/7f5CNbRDgojizY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","toast","useNavigate","Login","navigate","username","setUserName","pass","setPass","log","e","preventDefault","validate","fetch","then","res","json","resp","Object","keys","length","error","catch","err","ProceedLoginusingAPI","inputobj","password","method","headers","body","JSON","stringify","console","success","sessionStorage","setItem","jwtToken","usenavigate","message","result","warning","target","value"],"sources":["/Users/thanhbinh/Downloads/Test Dev - DXM/test-dev/src/components/Login.js"],"sourcesContent":["import useState from 'react'\nimport {toast } from 'react-toastify'\nimport { useNavigate } from 'react-router-dom';\n\n\nexport const Login=()=> {\n    let navigate = useNavigate();\n\n    const[username, setUserName] = useState('');\n    const[pass,setPass] = useState('');\n\n    const log=(e) =>{\n        e.preventDefault();\n        if(validate()){\n            fetch(\"http://localhost:3000/users\"+username).then((res) => {\n                return res.json();\n\n            })\n            .then((resp) => {\n               // console.log(resp)\n               if (Object.keys(resp).length ===0){\n                   toast.error('Entrez votre username');\n               }else{\n                   if(resp.pass === pass){\n                       navigate('/pilote')\n                   }else{\n                       toast.error('il y a error')\n                   }\n               }\n               \n            })\n            .catch((err)=> {\n                toast.error('Error')\n            })\n        }\n    }\n\n\n    const ProceedLoginusingAPI = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            ///implentation\n            // console.log('proceed');\n            let inputobj={\"username\": username,\n            \"password\": password};\n            fetch(\"https://localhost:44308/User/Authenticate\",{\n                method:'POST',\n                headers:{'content-type':'application/json'},\n                body:JSON.stringify(inputobj)\n            }).then((res) => {\n                return res.json();\n            }).then((resp) => {\n                console.log(resp)\n                if (Object.keys(resp).length === 0) {\n                    toast.error('Login failed, invalid credentials');\n                }else{\n                     toast.success('Success');\n                     sessionStorage.setItem('username',username);\n                     sessionStorage.setItem('jwttoken',resp.jwtToken);\n                   usenavigate('/')\n                }\n            }).catch((err) => {\n                toast.error('Login Failed due to :' + err.message);\n            });\n        }\n    }\n\n    const validate = () => {\n        let result = true;\n        if (username === '' || username === null) {\n            result = false;\n            toast.warning('Please Enter Username');\n        }\n        if (pass === '' || pass === null) {\n            result = false;\n            toast.warning('Please Enter Password');\n        }\n        return result;\n    }\n    \n        \n\n\n    return (\n\n\n       \n        <div className=\"container\">\n            <form onSubmit={ProceedLoginusingAPI}>\n\n           \n\n            <div>\n                <label className=\"account\">ID ACCOUNT </label>\n                <input type=\"text\" name=\"account\" value={username} onChange={e => setUserName(e.target.value)} className=\"info\"/>\n\n            </div>\n            \n            <div>\n                <label className=\"account\">PASSWORD </label>\n                <input type=\"password\" name=\"pass\" value={pass} onChange={e => setPass(e.target.value)} className=\"info\"/>\n\n            </div>\n               \n            <div className=\"btn1\">\n                    \n                <button className=\"submit\" onClick={log}>Log In</button>\n                    \n                <button className=\"cancel\" navigate=\"/\" value=\"cancel\">Cancel</button>\n                   \n            </div>\n\n            <div>\n                <a className = \"forget\" href=\"\">Forgot Password ???</a>\n            \n            </div>  \n            \n                \n            </form>\n\n         </div>\n\n\n\n\n    )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}