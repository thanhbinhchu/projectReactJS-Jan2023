{"ast":null,"code":"var _jsxFileName = \"/Users/thanhbinh/Downloads/Test Dev - DXM/test-dev/src/components/Pilote.js\";\nimport Data from './videos.json';\nimport React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport ReactPlayer from 'react-player';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pilote = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: [\"let a = videoObj.src\", /*#__PURE__*/_jsxDEV(Carousel, {\n      children: Data.map(videoObj => {\n        return /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n            url: videoObj.src,\n            pip: true,\n            controls: true,\n            playing: true,\n            config: {\n              file: {\n                attributes: {\n                  crossOrigin: \"true\"\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: videoObj.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, videoObj.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Pilote;\n{/* <div className=''>\n    <div>\n         <Carousel>\n             { Data.map((record) => {\n                    return (\n                        <div className=\"\">\n                            <Carousel.Item key={record.id}>\n                                <ReactPlayer\n                                    src = {require(\"\"+record.src)} \n                                    width=\"50%\"\n                                    pip={true}\n                                    controls={true}\n                                    playing={true}\n                                />\n                                 <Carousel.Caption> <h3>{record.title}</h3></Carousel.Caption>\n                            </Carousel.Item>\n                        </div>\n                    \n                         \n            )})}\n            \n         </Carousel>\n </div>\n </div> */}\n\n/* <a>{ record.title }</a>\n              \n<video className=\"v2\" width=\"150\" height=\"100\" controls autoPlay={true} loop={true} id={record.id}\nonClick={this.videoClick}>\n\n<source src = {require(\"\"+record.src)} type=\"video/mp4\" />\n</video> */\n\n/* <button onClick={view}>OK </button> */\n\nexport default Pilote;\nvar _c;\n$RefreshReg$(_c, \"Pilote\");","map":{"version":3,"names":["Data","React","Carousel","ReactPlayer","Pilote","map","videoObj","src","file","attributes","crossOrigin","title","id"],"sources":["/Users/thanhbinh/Downloads/Test Dev - DXM/test-dev/src/components/Pilote.js"],"sourcesContent":["import Data from './videos.json'\nimport React from 'react'\nimport {Carousel} from 'react-bootstrap'\nimport ReactPlayer from 'react-player'\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nexport const Pilote = () => {\n\n\n\nreturn (\n\n\n    <div className=\"grid-container\">\n\n        let a = videoObj.src \n        \n      <Carousel>\n        {Data.map((videoObj) => {\n          return (\n\n            <Carousel.Item key={videoObj.id}>\n              <ReactPlayer\n                url= {videoObj.src}\n                pip={true}\n                controls={true}\n                playing={true}\n                config={{\n                    file: {\n                      attributes: {\n                        crossOrigin: \"true\",\n                      }\n                    }\n                  }}\n                \n              />\n              <Carousel.Caption>\n                <h3>{videoObj.title}</h3>\n                \n              </Carousel.Caption>\n            </Carousel.Item>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n};\n\n    \n{/* <div className=''>\n    <div>\n\n        <Carousel>\n\n            { Data.map((record) => {\n                    return (\n                        <div className=\"\">\n                            <Carousel.Item key={record.id}>\n                                <ReactPlayer\n                                    src = {require(\"\"+record.src)} \n                                    width=\"50%\"\n                                    pip={true}\n                                    controls={true}\n                                    playing={true}\n                                />\n\n                                <Carousel.Caption> <h3>{record.title}</h3></Carousel.Caption>\n                            </Carousel.Item>\n                        </div>\n                    \n                         \n            )})}\n            \n\n        </Carousel>\n\n</div>\n\n</div> */}\n\n                        \n                        /* <a>{ record.title }</a>\n\n                    \n                \n                    <video className=\"v2\" width=\"150\" height=\"100\" controls autoPlay={true} loop={true} id={record.id}\n                    onClick={this.videoClick}>\n                        \n                        <source src = {require(\"\"+record.src)} type=\"video/mp4\" />\n\n                    </video> */\n\n\n            \n    \n\n\n    \n    /* <button onClick={view}>OK </button> */\n\n\n\n\nexport default Pilote"],"mappings":";AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,kCAAkC;AAAC;AAE1C,OAAO,MAAMC,MAAM,GAAG,MAAM;EAI5B,oBAGI;IAAK,SAAS,EAAC,gBAAgB;IAAA,WAAC,sBAI9B,uBAAC,QAAQ;MAAA,UACNJ,IAAI,CAACK,GAAG,CAAEC,QAAQ,IAAK;QACtB,oBAEE,QAAC,QAAQ,CAAC,IAAI;UAAA,wBACZ,QAAC,WAAW;YACV,GAAG,EAAGA,QAAQ,CAACC,GAAI;YACnB,GAAG,EAAE,IAAK;YACV,QAAQ,EAAE,IAAK;YACf,OAAO,EAAE,IAAK;YACd,MAAM,EAAE;cACJC,IAAI,EAAE;gBACJC,UAAU,EAAE;kBACVC,WAAW,EAAE;gBACf;cACF;YACF;UAAE;YAAA;YAAA;YAAA;UAAA,QAEJ,eACF,QAAC,QAAQ,CAAC,OAAO;YAAA,uBACf;cAAA,UAAKJ,QAAQ,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QAER;QAAA,GAlBDL,QAAQ,CAACM,EAAE;UAAA;UAAA;UAAA;QAAA,QAmBf;MAEpB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACO;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV,CAAC;AAAC,KAxCWR,MAAM;AA2CnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAvBC;;AAgCuB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAWI;;AAKJ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}